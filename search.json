[{"title":"linux-command-process","url":"/2018/12/06/linux-command-process/","content":"\n### 프로세스별 메모리 사용량 표시\n\nps -eo user,pid,ppid,rss,size,vsize,pmem,pcpu,time,cmd --sort -rss | head -n 11\n"},{"title":"redis-cli","url":"/2018/11/28/redis-cli/","content":"\nredis-cli -h HOST_NAME -p PORT_NUMBER hgetall SESSION_ID\n\n","tags":["redis-cli"]},{"title":"nodejs-test-mocha","url":"/2018/11/03/nodejs-test-mocha/","content":"mocha 테스트 뼈대를 만들어주는 package\n\nchai 테스트 문법 작성\n\npuppeteer headles browser\n\n- browser 지정가능\n- \n\ntest : node_modules/.bin/mocha test.js"},{"title":"google-developers-step1","url":"/2018/10/18/google-developers-step1/","content":"구글 개발자 도구 프로그램 관련 포스트 입니다.\n\n## 목차\n  1. [구글 웹페이지 속도 측정](#pagespeed)\n\n\n\n\n### pagespeed\n  1. 구글 웹페이지 속도 측정\n  웹페이지 속도 측정을 도와주고 개선사항을 알려주는 도구\n\n  [PageSpeed Tools](https://developers.google.com/speed/pagespeed/insights/)\n\n### google chart\n  ","tags":["google","google-developers"]},{"title":"Node.js 프로젝트 두번째","url":"/2018/10/13/nodejs-project-step2/","content":"## 표기 설명\n1. 설명1\n2. 설명2\n\n","tags":["nodejs"]},{"title":"Node.js 프로젝트 첫번째","url":"/2018/10/13/nodejs-project-step1/","content":"본 포스트는 Node.js 프로젝트 가장 기본적인 단계로 한번이라도 개발 해보신분은 넘어가시면 됩니다. `Node.js`로 개발하는 프로젝트 첫번째 입니다. 처음 설치부터 프로젝트 생성까지 진행 하겠습니다. 각 단계는 개별로 내려받아서 진행 할 수 있게 하려고 합니다. 관련 GitHub 저장소 : [Node.js 프로젝트 첫번째](https://github.com/pcm9881/nodejs-project-step1)\n\n\n## 목차\n  1. [Node.js 소개](#Node-Introduction)\n  2. [Node.js 설치](#Node-Install)\n  3. npm 소개\n  4. npm 설치\n  5. 프로젝트 생성\n\n### Node Introduction\n  1. Node.js 소개\n  > Node는 비동기 이벤트 주도 JavaScript 런타임으로써 확장성 있는 네트워크 애플리케이션을 만들 수 있도록 설계되었습니다.\n  * 참조 : [Node.js 공식사이트(한국어)](https://nodejs.org/ko/)\n\n### Node Install\n\n### npm소개\n\n### npm설치\n\n### 프로젝트생성\n","tags":["nodejs"]},{"title":"golang-step1","url":"/2018/10/10/golang-step1/","content":"### Go 프로그램 언어\n1. golang 설명\n2. golang 설치\n\n\n### Go 프로그래밍 언어란?\n\n#### Go 언어는 개발자들이 생산적으로 만들기 위한 오픈소스 언어이다. \n\nGo 언어 정식 사이트 : https://golang.org/\n\n\n","tags":["golang"]},{"title":"golang-dep","url":"/2018/10/10/golang-dep/","content":"### Go 의존성 관리 툴 dep \n1. golang-dep 설명\n2. golang-dep 설치\n\n### golang-dep란?\n\n#### go를 위한 위존성 관리 툴\n\ngolang dep git url : https://github.com/golang/dep\n\n\n","tags":["golang","golang-dep"]},{"title":"nginx-step1","url":"/2018/09/28/nginx-step1/","content":"## nginx 웹 서버 소프트웨어\n1. nginx 설명\n2. nginx 설치","tags":["nginx"]},{"title":"jstl-step1","url":"/2018/09/20/jstl-step1/","content":"## JTSL \n1. 설명\n2. 선언\n\n## 자바서버 페이지 표준 태그 라이브러리 \n\n(JavaServer Pages Standard Tag Library)\n\n### functions ( fn )\n\n  - 선언\n```\n<%@ taglib prefix=\"fn\" uri=\"http://java.sun.com/jsp/jstl/functions\" %>\n```\n\n  - 사용\n\n글자자르기\n```\n<c:set var=\"textValue\" value=\"abcd\" />\n<c:set var=\"subStrValue\" value=\"${fn:substring(textValue,0,3)}\" />\n${subStrValue}\n```\n\n### fmt\n\n소수점 버리고 INT형으로 표기\n```\n<fmt:parseNumber var=\"intValue\" integerOnly=\"true\" value=\"${100/10}\"/>\n${intValue}\n```\n","tags":["jstl"]},{"title":"개발용어 정리 페이지 첫번째","url":"/2018/09/16/glossary-step1/","content":"개발용어 정리 페이지 첫번째장입니다. 각 장당 5개 용어를 설명 하려고 합니다. 현재 페이지에서는 IIFE, SPA, runtime,\n\n## 목차\n  1. [IIFE](#IIFE)\n  2. [SPA](#SPA)\n  3. [runtime](#runtime)\n  4. [RESTFul](#RESTFul)\n  5. \n\n\n### IIFE \n  IIFE (Immediately Invoked Function Expression)\n  즉시 실행 함수 표현은 정의되자마자 즉시 실행되는 Javascript Function \n  이는 Self-Executing Anonymous Function 으로 알려진 디자인 패턴이고 크게 두 부분으로 구성된다. \n  첫 번째는 괄호((), Grouping Operator)로 둘러싸인 익명함수(Anonymous Function)\n\n  * 예제 1\n  ```\n    (function () { \n        var aName = \"pcm9881\";\n    })();\n    // IIFE 내부에서 정의된 변수는 외부 범위에서 접근이 불가\n    aName // throws \"Uncaught ReferenceError: aName is not defined\"\n  ```\n  * 예제 2\n  ```\n      var result = (function () { \n        var name = \"pcm9881\"; \n        return name; \n      })(); \n      // 즉시 결과를 생성\n      result; // \"pcm9881\"\n  ```\n  예제 2번을 보면 IIFE를 변수에 할당하면 IIFE 자체는 저장되지 않고, 함수가 실행된 결과만 저장\n  \n  * 참조 : [MDN 웹 문서](https://developer.mozilla.org/ko/docs/Glossary/IIFE)\n\n### SPA\n  SPA (Single Page Applications) 싱글 페이지 애플리케이션\n  \n  서버로부터 완전한 새로운 페이지를 불러오지 않고 현재의\n\n\n### runtime\n  runtime  런타임\n\n### RESTFul","tags":["glossary"]},{"title":"git 명령어 정리","url":"/2018/08/28/git-command/","content":"### 자주 사용하는 git command 정리\n1. git command 종류\n2. 사용 예제\n\n### Setup and Config 관련\n\n#### config\n\n##### config 전체 확인\ngit 설정내용 확인하는 명령어\n```\ngit config --list\n```\n\n##### config local 셋팅\ngit 현재 config 셋팅\n```\ngit config user.name \"name\"\ngit config user.email \"email\"\n```\n\n##### config global 셋팅\ngit 전체 config 셋팅\n```\ngit config --global user.name \"name\"\ngit config --global user.email \"email\"\n```\n\n### Basic Snapshotting 관련\n\n#### add \ngit 현재 commit 할 내용을 추가\n```\ngit add <file>\n```\n\n#### git commit \n\n### git reset\n\n### git merge\n\n### git fetch\n\n### git ","tags":["git","git-command"]},{"title":"hexo github-pages blog","url":"/2018/08/13/hexo-github-page-blog/","content":"## hexo를 통해서 gitHub pages blog 만들기\n\n1. github 가입\n2. hexo 설명\n3. hexo 설치\n\n### GitHub 가입하기\n\n### GitHub 가입하기\n\n### GitHub 가입하기\n\n### Resources\n\n* [GitHub Pages](https://pages.github.com/)\n* [HEXO](https://hexo.io/)\n","tags":["hexo","github-pages"]},{"title":"Hello World","url":"/2018/08/13/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"}]