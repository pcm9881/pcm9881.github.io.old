[{"title":"nodejs-project-step2","url":"/2018/10/13/nodejs-project-step2/","content":"## 표기 설명\n1. 설명1\n2. 설명2\n\n## 개발환경\n||\n|:--------|:--------:|\n| Language |  ECMAScript 6 |\n| Web Server |  NGINX |\n| OS | Mac OS X | "},{"title":"nodejs-project-step1","url":"/2018/10/13/nodejs-project-step1/","content":"## Node.js 프로젝트 1단계\n1. Node.js 소개\n2. Node.js 설치\n3. \n\n### 개발환경\n| 환경 | 이름 | 버전 |\n|:--------|:--------:|:--------:|\n| Language |  javascript | ECMAScript 5 |\n| OS | Mac OS X | 10.13.6 |\n| Framework | express | ^4.16.3 |\n| Web Server | express | http |","tags":["nodejs"]},{"title":"golang-dep","url":"/2018/10/10/golang-dep/","content":"### Go 의존성 관리 툴 dep \n1. golang-dep 설명\n2. golang-dep 설치\n\n### golang-dep란?\n\n#### go를 위한 위존성 관리 툴\n\ngolang dep git url : https://github.com/golang/dep\n\n\n","tags":["golang-dep"]},{"title":"golang-step1","url":"/2018/10/10/golang-step1/","content":"### Go 프로그램 언어\n1. golang 설명\n2. golang 설치\n\n\n### Go 프로그래밍 언어란?\n\n#### Go 언어는 개발자들이 생산적으로 만들기 위한 오픈소스 언어이다. \n\nGo 언어 정식 사이트 : https://golang.org/\n\n\n","tags":["golang"]},{"title":"nginx-step1","url":"/2018/09/28/nginx-step1/","content":"## nginx 웹 서버 소프트웨어\n1. nginx 설명\n2. nginx 설치","tags":["nginx"]},{"title":"jstl-step1","url":"/2018/09/20/jstl-step1/","content":"## JTSL \n1. 설명\n2. 선언\n\n## 자바서버 페이지 표준 태그 라이브러리 \n\n(JavaServer Pages Standard Tag Library)\n\n### functions ( fn )\n\n  - 선언\n```\n<%@ taglib prefix=\"fn\" uri=\"http://java.sun.com/jsp/jstl/functions\" %>\n```\n\n  - 사용\n\n글자자르기\n```\n<c:set var=\"textValue\" value=\"abcd\" />\n<c:set var=\"subStrValue\" value=\"${fn:substring(textValue,0,3)}\" />\n${subStrValue}\n```\n\n### fmt\n\n소수점 버리고 INT형으로 표기\n```\n<fmt:parseNumber var=\"intValue\" integerOnly=\"true\" value=\"${100/10}\"/>\n${intValue}\n```\n","tags":["jstl"]},{"title":"glossary-step1","url":"/2018/09/16/glossary-step1/","content":"### 용어사전\n1. 용어사전 정리\n2. 예제\n\n\n## 용어사전 정리\n\n* IIFE, Immediately Invoked Function Expression\n  *  즉시 실행 함수 표현은 정의되자마자 즉시 실행되는 Javascript Function 이는 Self-Executing Anonymous Function 으로 알려진 디자인 패턴이고 크게 두 부분으로 구성된다. 첫 번째는 괄호((), Grouping Operator)로 둘러싸인 익명함수(Anonymous Function)\n\n  * 예제\n```\n  (function () { \n      var aName = \"pcm9881\";\n  })();\n  // IIFE 내부에서 정의된 변수는 외부 범위에서 접근이 불가\n  aName // throws \"Uncaught ReferenceError: aName is not defined\"\n```\n    IIFE를 변수에 할당하면 IIFE 자체는 저장되지 않고, 함수가 실행된 결과만 저장\n```\n    var result = (function () { \n      var name = \"pcm9881\"; \n      return name; \n    })(); \n    // 즉시 결과를 생성\n    result; // \"pcm9881\"\n```\n\n\n* SPA, Single Page Applications\n  * 싱글 페이지 애플리케이션(single-page application, SPA, 스파)은 서버로부터 완전한 새로운 페이지를 불러오지 않고 현재의 페이지를 동적으로 다시 작성함으로써 사용자와 소통하는 웹 애플리케이션이나 웹사이트를 말한다. 이러한 접근은 연속되는 페이지들 간의 사용자 경험의 간섭을 막아주고 애플리케이션이 더 데스크톱 애플리케이션처럼 동작하도록 만들어준다. SPA에서 HTML, 자바스크립트, CSS 등 필요한 모든 코드는 하나의 페이지로 불러오거나,[1] 적절한 자원들을 동적으로 불러들여서 필요하면 문서에 추가하는데, 보통 사용자의 동작에 응답하게 되는 방식이다. 문서는 프로세스 중 어떠한 지점에서도 다시 불러들이지 않으며 다른 문서로 제어권을 넘기지 않으나, 위치 해시나 HTML5 히스토리 API를 사용하여 애플리케이션 안에서 개개의 논리 문서의 인식 및 탐색을 제공할 수 있다.[2] 싱글 페이지 애플리케이션과의 소통은 뒷편에 있는 웹 서버와의 동적인 통신을 수반하기도 한다. ( 참조 : [위키백과](https://ko.wikipedia.org/wiki/%EC%8B%B1%EA%B8%80_%ED%8E%98%EC%9D%B4%EC%A7%80_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98) )","tags":["glossary"]},{"title":"restful","url":"/2018/08/28/restful/","content":"RESTFul","tags":["restful"]},{"title":"git-command","url":"/2018/08/28/git-command/","content":"### 자주 사용하는 git command 정리\n1. git command 종류\n2. 사용 예제\n\n### Setup and Config 관련\n\n#### config\n\n##### config 전체 확인\ngit 설정내용 확인하는 명령어\n```\ngit config --list\n```\n\n##### config local 셋팅\ngit 현재 config 셋팅\n```\ngit config user.name \"name\"\ngit config user.email \"email\"\n```\n\n##### config global 셋팅\ngit 전체 config 셋팅\n```\ngit config --global user.name \"name\"\ngit config --global user.email \"email\"\n```\n\n### Basic Snapshotting 관련\n\n#### add \ngit 현재 commit 할 내용을 추가\n```\ngit add <file>\n```\n\n#### git commit \n\n### git reset\n\n### git merge\n\n### git fetch\n\n### git ","tags":["git-command"]},{"title":"hexo github-pages blog","url":"/2018/08/13/hexo-github-page-blog/","content":"## hexo를 통해서 gitHub pages blog 만들기\n\n1. github 가입\n2. hexo 설명\n3. hexo 설치\n\n### GitHub 가입하기\n\n### GitHub 가입하기\n\n### GitHub 가입하기\n\n### Resources\n\n* [GitHub Pages](https://pages.github.com/)\n* [HEXO](https://hexo.io/)\n","tags":["hexo","github-pages"]},{"title":"Hello World","url":"/2018/08/13/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"}]